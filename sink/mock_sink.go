// Code generated by mockery v2.52.2. DO NOT EDIT.

package sink

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockSink is an autogenerated mock type for the Sink type
type MockSink struct {
	mock.Mock
}

type MockSink_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSink) EXPECT() *MockSink_Expecter {
	return &MockSink_Expecter{mock: &_m.Mock}
}

// Close provides a mock function with no fields
func (_m *MockSink) Close() {
	_m.Called()
}

// MockSink_Close_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Close'
type MockSink_Close_Call struct {
	*mock.Call
}

// Close is a helper method to define mock.On call
func (_e *MockSink_Expecter) Close() *MockSink_Close_Call {
	return &MockSink_Close_Call{Call: _e.mock.On("Close")}
}

func (_c *MockSink_Close_Call) Run(run func()) *MockSink_Close_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSink_Close_Call) Return() *MockSink_Close_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockSink_Close_Call) RunAndReturn(run func()) *MockSink_Close_Call {
	_c.Run(run)
	return _c
}

// Write provides a mock function with given fields: ctx
func (_m *MockSink) Write(ctx context.Context) {
	_m.Called(ctx)
}

// MockSink_Write_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Write'
type MockSink_Write_Call struct {
	*mock.Call
}

// Write is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockSink_Expecter) Write(ctx interface{}) *MockSink_Write_Call {
	return &MockSink_Write_Call{Call: _e.mock.On("Write", ctx)}
}

func (_c *MockSink_Write_Call) Run(run func(ctx context.Context)) *MockSink_Write_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockSink_Write_Call) Return() *MockSink_Write_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockSink_Write_Call) RunAndReturn(run func(context.Context)) *MockSink_Write_Call {
	_c.Run(run)
	return _c
}

// NewMockSink creates a new instance of MockSink. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSink(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSink {
	mock := &MockSink{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
